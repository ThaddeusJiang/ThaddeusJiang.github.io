<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   <title>Thaddeus Jiang</title>
   <link>https://thaddeusjiang.com</link>
   <description>专注；分享；寻找。</description>
   <item>
      <title>2023-09-21 31岁 在日本拔了一颗牙</title>
      <link>https://thaddeusjiang.com/2023-09-21-31-sui-zai-ri-ben-ba-liao-yi-ke-ya</link>
			<description><![CDATA[
<div class="container">
    <div class="column is-6-desktop is-offset-3-desktop is-8 is-offset-2 my-4">
      <nav aria-label="main navigation" class="navbar" role="navigation">
        <div class="navbar-brand">
            <a href="./">
                <h1 class="title">Thaddeus Jiang</h1>
                <p class="subtitle">专注；分享；寻找。</p>
            </a>
        </div>
     </nav>
    </div>
  </div>


<div class="container mt-4">
  <div class="column is-6-desktop is-offset-3-desktop is-8 is-offset-2">
      <div>
          <div class="block content blog">
            <h1 class="subtitle">2023-09-21 31岁 在日本拔了一颗牙</h1>
            <hr>

            <p>这是一篇吹爆日本医疗（拔牙体验）的小作文，以表达我对日本医疗赞美，以及对我的牙医钦佩。不喜欢日本的朋友，请主动回避。哈哈哈</p><p>2023年，我已经 31 岁了，谁能想到我还会长智齿，还会被牙疼的晚上睡不着觉，😂</p><p>其实我本来不想去拔牙的，因为我见过好几个朋友发过的拔牙后的朋友圈，天呐，太吓人了。一个个都是脸肿的像馒头一样，疼得要死要活的，让我有一点害怕拔牙。不过，不去治疗也不行，毕竟我也被疼得睡不着觉，需要靠止痛片才能入睡。</p><p>下面是我的体验，开始赞美了。哈哈哈</p><p>我这次拔牙的体验真的太棒了，整个体验就像“小时候眼睛里进了沙子，疼得不停流眼泪，使劲揉眼睛也不好，但是妈妈帮忙轻轻的吹一下就好了”。轻轻松松，简简单单，就不疼了。</p><p>下面这些细节让我无比舒适，感受太棒了。</p><p>1. 拔牙手术进行的非常快</p><p>拔牙过程快到我还在酝酿情绪就已经结束了，我以为医生还在检查麻药是否起效呢，护士小妹妹就已经帮我把椅子调正，解下我的医用口水巾，告诉我可以回去了。这也太快了，我站起来后还是懵懵的，不过我还没傻，走之前我和医生说：“谢谢，我想把我的牙带走”。😂</p><p>另外，整个预约，治疗，回家的过程也非常流畅，流畅到完全没有影响到我今天的工作。</p><ul><li>我 11:00 左右给牙科诊所打电话预约，碰巧今天 12:30 我的牙医有空。</li><li>我 12:15 开车去诊所，12:30 医生帮我检查，说明现状，我同意通过拔牙治疗，麻醉，拔牙手术，开处方，结账，预约第二天的消毒。</li><li>13:00 离开诊所，拿着医生开的处方去药店买药。</li><li>13:29 我已经开车到家了。</li></ul><p>哈哈哈 这体验也太棒了，希望你们能懂我的舒适，希望大家也有如此舒适的就医体验。</p><p>2. 在日本拔牙完全不用担心钱包</p><p>我拔牙花了 ¥1830 日元，折合人民币 90元；买药花了 ¥660 日元，折合人民币 32.60元。钱包还是笑容满面。</p><p>感谢日本的医疗保险制度，感谢日本政府在医疗制度上的努力，让我可以如此舒适地就医，丝毫没有压力。</p><p>3. 牙医技术高超</p><p>上面说过了拔牙手术进行的非常快，快到我根本就没有任何感激。我想另外一点也是因为医生的技术真的高超，我一点都没感觉到疼痛，甚至没有感觉到医生用力，就像他轻轻地碰了一下我的病齿，牙齿就被拔下来了。</p><p>哈哈哈，我没有把办法用语言准确地表达我的体验，简单举个例子：专业的牙医为我拔牙就像剪指甲一样简单，一样轻松，一点也不疼，甚至还有一点点舒适。</p><p>以上就是我这次拔牙的经历和体验，感谢阅读。</p><p>最后，祝大家身体健康，心情愉快。</p>
          </div>          
      </div>
  </div>
</div>     


]]></description>
      <pubDate>Thu, 21 September 2023 13:3:32 -00:00</pubDate>
			<guid>https://thaddeusjiang.com/2023-09-21-31-sui-zai-ri-ben-ba-liao-yi-ke-ya</guid>      
   </item>

   <item>
      <title>2023-08-25 最近常常考虑找个心理医生治疗一下</title>
      <link>https://thaddeusjiang.com/2023-08-25-zui-jin-chang-chang-kao-lv-zhao-ge-xin-li-yi-sheng-zhi-liao-yi-xia</link>
			<description><![CDATA[
<div class="container">
    <div class="column is-6-desktop is-offset-3-desktop is-8 is-offset-2 my-4">
      <nav aria-label="main navigation" class="navbar" role="navigation">
        <div class="navbar-brand">
            <a href="./">
                <h1 class="title">Thaddeus Jiang</h1>
                <p class="subtitle">专注；分享；寻找。</p>
            </a>
        </div>
     </nav>
    </div>
  </div>


<div class="container mt-4">
  <div class="column is-6-desktop is-offset-3-desktop is-8 is-offset-2">
      <div>
          <div class="block content blog">
            <h1 class="subtitle">2023-08-25 最近常常考虑找个心理医生治疗一下</h1>
            <hr>

            <p>我有两个心结一直无法解开，虽然我很想放下，但是它们总是闯进我的梦和大脑里，超级烦人。</p><p>第一个心结是：我经常梦见自己在大四从大学退学，回高中复读去了，没有拿到大学毕业证。</p><p>我经常梦见自己在大四从大学退学，回高中复读去了，梦里我总是邻近高考才发现自己现在的实力连大连理工都考不上了，开始后悔自己为什么选择复读重新高考。明明已经在大学读了3年，最后一年实习结束后就能稳稳地拿到毕业证而自己却放弃了。每次都被这个梦折腾到身心疲惫，每次都要到梦快醒的时候我才意识到自己在现实世界其实已经顺利毕业了。</p><p>😂 何必呢？</p><p>虽然醒着的时候我觉得自己已经放下的大学去了大连理工大学软件学院这个心结，而且学习软件貌似是一个非常不错的选择，市场需求大，待遇高，自己也擅长。
但是在梦里它总是出现，总来折磨我，好烦啊。我都已经从大学毕业 8 年了，而且这些年因为大连理工也算是不错的学校，软件工程是比较有市场的专业，我也过的不错，没有过的很惨。</p><p>为什么梦里这个心结总来折磨我，我真的想不通。醒着的时候我觉得自己真的已经不介意了啊。</p><p>我的第二个心结是：</p><p>这个心结比较隐私，只有我老婆和几个朋友知道，我暂时还没有勇气说出来。其实我很想和现在常联系的几个朋友聊聊这个心结的，但是现在年纪大了，没有年轻时那么勇敢了，所以有时候觉得年纪大了以后朋友之间也有不能说的秘密。成长让人变得更孤独，更不幸。
我觉得很烦，我不知道什么时候能克服这个心结，说不定一生都无法克服吧。
有时我安慰自己，如果这个世界足够包容，没有圣母婊，没有道德警察，这个心结其实也不是什么大问题，没有伤害到任何人，对我自己也没有任何负面影响。</p><blockquote><div>BTW 我不是同性恋，不用瞎猜，哈哈哈</div></blockquote><p>实在不行，真的应该去寻求一下心理治疗，要是被这两件破事继续折磨下午可太烦了。</p><p>以上
</p>
          </div>          
      </div>
  </div>
</div>     


]]></description>
      <pubDate>Fri, 25 August 2023 4:13:22 -00:00</pubDate>
			<guid>https://thaddeusjiang.com/2023-08-25-zui-jin-chang-chang-kao-lv-zhao-ge-xin-li-yi-sheng-zhi-liao-yi-xia</guid>      
   </item>

   <item>
      <title>2023-08-24 JS/TS number 格格不入</title>
      <link>https://thaddeusjiang.com/2023-08-24-js-ts-number-ge-ge-bu-ru</link>
			<description><![CDATA[
<div class="container">
    <div class="column is-6-desktop is-offset-3-desktop is-8 is-offset-2 my-4">
      <nav aria-label="main navigation" class="navbar" role="navigation">
        <div class="navbar-brand">
            <a href="./">
                <h1 class="title">Thaddeus Jiang</h1>
                <p class="subtitle">专注；分享；寻找。</p>
            </a>
        </div>
     </nav>
    </div>
  </div>


<div class="container mt-4">
  <div class="column is-6-desktop is-offset-3-desktop is-8 is-offset-2">
      <div>
          <div class="block content blog">
            <h1 class="subtitle">2023-08-24 JS/TS number 格格不入</h1>
            <hr>

            <p>imo: TypeScript number 类型定义模糊，JavaScript number 精度非主流，ECMAScript bigint 限制超多。JS/TS number 与其他编程语言显得格格不入。</p><p>不要妄想 TypeScript 可以拯救 JavaScript number，TypeScript 的 number 类型因为需要兼容 JavaScript，所以也没有 int32 int64 等细分类型，数值的精度范围也继承了 JavaScript 埋的坑。🤷</p><p>分享几个我遇到的问题以及解决方案：</p><h3 class="">1. JS/TS number 全身都是 bug</h3><p>JS/TS number 因为要同时兼容 int float double 导致它的精度很迷，与强类型工具（如 RDB, protobuf）的数值范围上有差异，非常容易产生 bug。</p><p>JS 最大安全整数（能够精确表示的整数）为 9,007,199,254,740,991（2<sup>53</sup> - 1），远小于 int64 (2<sup>63</sup> - 1)。所以如果你在 RDB 中使用 int64 类型，在 JS 中就会溢出。</p><p>Example: 2<sup>64</sup>-1 is 1844674407370955<strong>1615</strong> but in JavaScript it evaluates to 1844674407370955<strong>2000</strong>.</p><blockquote><div>使用 long.js 可以弥补这个设计缺陷。</div></blockquote><p>但是 long.js 也有问题，个人建议能不用就别用。</p><h3 class="">2. JS/TS bigint 限制超多</h3><p>bigint 虽然是整数，但是在使用上有很多限制，例如：</p><ol><li>BigInt 与 Number 转换会损失精度</li><li>BigInt 在 JSON.stringify() 会引发 TypeError</li><li>BigInt 不能使用 Math 中方法</li></ol><p>天呐🤷，这么多限制，还不容不用呢。反正我从来不用 bigint。</p><p>如果真的需要处理超大数值，我推荐使用 bignumber.js，我可不想自己写数值运算，bignumber.js 提供了很多开箱即用的方法：</p><h2 class="">3. int32 int64 对应 TS 类型没有统一标准</h2><p>Prisma scheme 支持 BigInt 类型，对应 TS BigInt 类型</p><p>Protocol Buffers 的 int32 int64 类型分别对应 TS number 和 Long</p><p>如果你同时使用 Prisma BigInt 和 protobuf int64 的话，你带代码中就会出现大量相互转换的 utils，类似下面这种：</p><blockquote><div>👇这些代码都是我从其他人的代码中 copy 过来的，不是我写的，我也永远不用写这种代码。</div></blockquote><pre class="hljs"><code class="ts hljs"><span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">BigIntUtil</span> {
  <span class="hljs-keyword">static</span> <span class="hljs-title function_">toNumber</span>(<span class="hljs-attr">b</span>: bigint): <span class="hljs-built_in">number</span> {
    <span class="hljs-keyword">const</span> n = <span class="hljs-built_in">parseInt</span>(b.<span class="hljs-title function_">toString</span>());
    <span class="hljs-keyword">if</span> (!<span class="hljs-title class_">Number</span>.<span class="hljs-title function_">isSafeInteger</span>(n)) {
      <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(
        <span class="hljs-string">&#x27;Fail to cast bigint to number. Value is out of safe integer range.&#x27;</span>,
      );
    }
    <span class="hljs-keyword">return</span> n;
  }

  <span class="hljs-keyword">static</span> <span class="hljs-title function_">from</span>(<span class="hljs-attr">v</span>: <span class="hljs-built_in">string</span> | <span class="hljs-built_in">number</span> | bigint): bigint {
    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> v === <span class="hljs-string">&#x27;bigint&#x27;</span>) {
      <span class="hljs-keyword">return</span> v;
    }
    <span class="hljs-keyword">return</span> <span class="hljs-title class_">BigInt</span>(v);
  }
}</code></pre><pre class="hljs"><code class="ts hljs"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Long</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;long&#x27;</span>;

<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LongUtil</span> {
  <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title function_">fromBigInt</span>(<span class="hljs-attr">num</span>: bigint): <span class="hljs-title class_">Long</span>;
  <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title function_">fromBigInt</span>(<span class="hljs-attr">num</span>: bigint | <span class="hljs-literal">undefined</span> | <span class="hljs-literal">null</span>): <span class="hljs-title class_">Long</span> | <span class="hljs-literal">undefined</span>;
  <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title function_">fromBigInt</span>(<span class="hljs-attr">num</span>: bigint | <span class="hljs-literal">undefined</span> | <span class="hljs-literal">null</span>): <span class="hljs-title class_">Long</span> | <span class="hljs-literal">undefined</span> {
    <span class="hljs-keyword">if</span> (num === <span class="hljs-literal">undefined</span> || num === <span class="hljs-literal">null</span>) {
      <span class="hljs-keyword">return</span> <span class="hljs-literal">undefined</span>;
    }
    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Long</span>.<span class="hljs-title function_">fromNumber</span>(<span class="hljs-title class_">Number</span>(num));
  }

  <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title function_">toBigInt</span>(<span class="hljs-attr">num</span>: <span class="hljs-title class_">Long</span>): bigint;
  <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title function_">toBigInt</span>(<span class="hljs-attr">num</span>: <span class="hljs-title class_">Long</span> | <span class="hljs-literal">undefined</span> | <span class="hljs-literal">null</span>): bigint | <span class="hljs-literal">undefined</span>;
  <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title function_">toBigInt</span>(<span class="hljs-attr">num</span>: <span class="hljs-title class_">Long</span> | <span class="hljs-literal">undefined</span> | <span class="hljs-literal">null</span>): bigint | <span class="hljs-literal">undefined</span> {
    <span class="hljs-keyword">if</span> (num === <span class="hljs-literal">undefined</span> || num === <span class="hljs-literal">null</span>) {
      <span class="hljs-keyword">return</span> <span class="hljs-literal">undefined</span>;
    }
    <span class="hljs-keyword">return</span> <span class="hljs-title class_">BigInt</span>(num.<span class="hljs-title function_">toNumber</span>());
  }
}</code></pre><pre class="hljs"><code class="ts hljs"><span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">JsonUtil</span> {
  <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title function_">stringify</span>(<span class="hljs-attr">data</span>: <span class="hljs-title class_">Record</span>&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">any</span>&gt;): <span class="hljs-built_in">string</span> {
    <span class="hljs-keyword">return</span> <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(data, <span class="hljs-function">(<span class="hljs-params">k, v</span>) =&gt;</span> {
      <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> v === <span class="hljs-string">&#x27;bigint&#x27;</span>) {
        <span class="hljs-keyword">return</span> v.<span class="hljs-title function_">toString</span>();
      }
      <span class="hljs-keyword">return</span> v;
    });
  }
}</code></pre><p>你有关于 JS/TS number 的故事吗？欢迎与我分享。</p><p>refs:</p><ul><li><a class="tc-tiddlylink-external" href="https://www.npmjs.com/package/long" rel="noopener noreferrer" target="_blank">long.js</a></li><li><a class="tc-tiddlylink-external" href="https://www.npmjs.com/package/bignumber.js" rel="noopener noreferrer" target="_blank">bignumber.js</a></li><li><a class="tc-tiddlylink-external" href="https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields#working-with-bigint" rel="noopener noreferrer" target="_blank">Prisma BigInt</a></li><li><a class="tc-tiddlylink-external" href="https://protobuf.dev/programming-guides/proto3/" rel="noopener noreferrer" target="_blank">protobuf int64</a></li></ul>
          </div>          
      </div>
  </div>
</div>     


]]></description>
      <pubDate>Thu, 24 August 2023 13:44:6 -00:00</pubDate>
			<guid>https://thaddeusjiang.com/2023-08-24-js-ts-number-ge-ge-bu-ru</guid>      
   </item>

</channel>
</rss>
