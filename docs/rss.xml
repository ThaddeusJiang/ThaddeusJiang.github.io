<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   <title>蒋继发 (ThaddeusJiang)</title>
   <link>https://thaddeusjiang.com</link>
   <description>Engineer / Blogger， 爱猫、爱读书、爱社交。</description>
   <item>
      <title>2023-05-24 Next.js 真的适合你的项目吗</title>
      <link>https://thaddeusjiang.com/2023-05-24-next-js-zhen-de-shi-he-ni-de-xiang-mu-ma</link>
			<description><![CDATA[
<div class="container">
    <div class="column is-6-desktop is-offset-3-desktop is-8 is-offset-2 my-4">
      <nav aria-label="main navigation" class="navbar" role="navigation">
        <div class="navbar-brand">
            <a href="./">
                <h1 class="title">蒋继发 (ThaddeusJiang)</h1>
                <p class="subtitle">Engineer / Blogger， 爱猫、爱读书、爱社交。</p>
            </a>
        </div>
     </nav>
    </div>
  </div>


<div class="container mt-4">
  <div class="column is-6-desktop is-offset-3-desktop is-8 is-offset-2">
      <div>
          <div class="block content blog">
            <h1 class="subtitle">2023-05-24 Next.js 真的适合你的项目吗</h1>
            <hr>

            <p>这是我在犹豫是否升级至 Next.js App Router 时的一些思考。我有很多项目，每个项目的情况各不相同，在 App Router 前，我一直使用 Next.js 作为唯一的前端框架。</p><p>但是 Next.js App Router 让我有点犹豫了，Next.js App Router 默认是 Server Components，并且推荐使用 Server fetch() 和 Server Actions 进行数据获取和修改。</p><p>如果项目 all in 在 Next.js server-side 肯定是没有问题，但是有一些项目其实 server 使用的是其他语言，例如 Ruby，Golang，Java 等等，就会导致有多个 server 存在。多个 server 就需要多个认证（Authentication）环节，或许会导致不方便。其实 Authentication 可以在离 client-side 最近的环节对应，例如 Gateway。在后面的 server services 中不再进行 Authentication，仅仅是服务调用。但是引入 Gateway 又会导致 Infra 复杂度提高。</p><p>事实上，保持单一 server 是最简单的，就像 ruby on rails 一样。</p><p>另外，我认为 Next.js Server Actions 会导致 server-side 和 client-side 代码组织混乱，例如：Server Actions 不能在 data mutated 之后显示临时 UI，如 toast notification，不得不还需要使用 client-side JS。难道要把 server-side 和 client-side JS 放在一个函数里吗？</p><p>再举一个例子，Server Components 无法实现滚动加载数据，因为滚动加载需要 client-side 提供触发滚动的标记。每次开发数据加载都要思考使用 server-side 还是 client-side 实际上是增加心智负担。</p><p>给出几个我自己的判断：</p><ul><li>如果 server-side 只是简单运算，允许使用 Serverless 的话，可以 all in Next.js。</li><li>如果 server-side 有复杂运算，Serverless 无法满足要求的话，推荐不要使用 Next.js，使用传统 web framework 更简单。例如：Ruby on Rails。</li><li>如果 server-side 使用 Node.js 以外的编程语言，也不要使用 Next.js，使用 server-side 编程语言推荐的 UI framework。例如 Elixirlang 推荐的 LiveView。</li></ul><p>BTW, Next.js 也支持 fully static app，如果愿意大家可以尝试一下。但是，我没有使用过。</p><p>refs:</p><ul><li><a class="tc-tiddlylink-external" href="https://nextjs.org/docs/getting-started/react-essentials#server-components" rel="noopener noreferrer" target="_blank">Next.js Server Components</a></li><li><a class="tc-tiddlylink-external" href="https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions" rel="noopener noreferrer" target="_blank">Next.js Server Actions</a></li><li><a class="tc-tiddlylink-external" href="https://www.phoenixframework.org/" rel="noopener noreferrer" target="_blank">LiveView</a></li><li><a class="tc-tiddlylink-external" href="https://tkdodo.eu/blog/you-might-not-need-react-query" rel="noopener noreferrer" target="_blank">You Might Not Need React Query</a></li></ul>
          </div>          
      </div>
  </div>
</div>     


]]></description>
      <pubDate>Wed, 24 May 2023 23:11:34 +09:00</pubDate>
			<guid>https://thaddeusjiang.com/2023-05-24-next-js-zhen-de-shi-he-ni-de-xiang-mu-ma</guid>      
   </item>

   <item>
      <title>2023-05-16 真的不要再使用 MUI 了</title>
      <link>https://thaddeusjiang.com/2023-05-16-zhen-de-bu-yao-zai-shi-yong-mui-liao</link>
			<description><![CDATA[
<div class="container">
    <div class="column is-6-desktop is-offset-3-desktop is-8 is-offset-2 my-4">
      <nav aria-label="main navigation" class="navbar" role="navigation">
        <div class="navbar-brand">
            <a href="./">
                <h1 class="title">蒋继发 (ThaddeusJiang)</h1>
                <p class="subtitle">Engineer / Blogger， 爱猫、爱读书、爱社交。</p>
            </a>
        </div>
     </nav>
    </div>
  </div>


<div class="container mt-4">
  <div class="column is-6-desktop is-offset-3-desktop is-8 is-offset-2">
      <div>
          <div class="block content blog">
            <h1 class="subtitle">2023-05-16 真的不要再使用 MUI 了</h1>
            <hr>

            <p>我不是针对 MUI，我是说所有巨型 UI components framework 都是垃圾。</p><p>发自内心的呐喊，各位在做 web frontend 项目时，真的不要再用巨型的 UI components framework 了，如：mui、antd 之类的。真的太难用了。</p><p>推荐采用 Tailwind CSS 的 UI components library，并且一定要确认覆盖默认风格也是使用 CSS。如果一个 UI components library 需要编写很多 JS 才能覆盖默认风格，千万不要使用。</p><p>有很多例子，分享一个刚刚对应的 UI 需求。</p><p>如果你想要修改 Dialog components 的边框的圆角大小，MUI 需要你写一大堆代码。并且这些都是 MUI 专用的 API，不通用，对你的技术没有任何成长。</p><pre class="hljs"><code class="jsx hljs"><span class="hljs-comment">// 1. 引入 createTheme, ThemeProvider</span>
<span class="hljs-keyword">import</span> { createTheme, <span class="hljs-title class_">ThemeProvider</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@mui/material/styles&#x27;</span>;

<span class="hljs-comment">// 2. 创建新的 theme，并且你必须知道如何精确覆盖 paper.borderRadius</span>

<span class="hljs-keyword">const</span> theme = <span class="hljs-title function_">createTheme</span>({
  <span class="hljs-attr">components</span>: {
    <span class="hljs-title class_">MuiDialog</span>: {
      <span class="hljs-attr">styleOverrides</span>: {
        <span class="hljs-attr">paper</span>: {
          <span class="hljs-attr">borderRadius</span>: <span class="hljs-string">&quot;12px&quot;</span>, <span class="hljs-comment">// 自定义边框半径</span>
        },
      },
    },
  },
});

<span class="hljs-comment">// 3. 使用 ThemeProvider 包裹 Dialog</span>
<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ThemeProvider</span> <span class="hljs-attr">theme</span>=<span class="hljs-string">{theme}</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">Dialog</span> <span class="hljs-attr">open</span>=<span class="hljs-string">{true}</span>&gt;</span>
    {/* 对话框内容 */}
  <span class="hljs-tag">&lt;/<span class="hljs-name">Dialog</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">ThemeProvider</span>&gt;</span></span></code></pre><p>优秀的 UI Components library 应该怎么做？通常只需要追加一个 CSS class 即可，形如：</p><pre class="hljs"><code class="jsx hljs">&lt;<span class="hljs-title class_">Dialog</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;rounded-2xl&quot;</span>&gt;
    {<span class="hljs-comment">/* 对话框内容 */</span>}
&lt;/<span class="hljs-title class_">Dialog</span>&gt;</code></pre><h1 class="">Conclusion</h1><p>MUI is too bad, recommend to try daisyUI.</p><p>ref: </p><ul><li><a class="tc-tiddlylink tc-tiddlylink-resolves" href="./#2021-04-02-yong-yuan-bu-yao-zai-shi-yong-ju-xing-ui-kuang-jia-liao">2021-04-02 永远不要再使用巨型 UI 框架了</a></li></ul>
          </div>          
      </div>
  </div>
</div>     


]]></description>
      <pubDate>Tue, 16 May 2023 23::45 +09:00</pubDate>
			<guid>https://thaddeusjiang.com/2023-05-16-zhen-de-bu-yao-zai-shi-yong-mui-liao</guid>      
   </item>

   <item>
      <title>2023-03-28 为什么我们需要自己的 AI 分身</title>
      <link>https://thaddeusjiang.com/2023-03-28-wei-shi-me-wo-men-xu-yao-zi-ji-de-ai-fen-shen</link>
			<description><![CDATA[
<div class="container">
    <div class="column is-6-desktop is-offset-3-desktop is-8 is-offset-2 my-4">
      <nav aria-label="main navigation" class="navbar" role="navigation">
        <div class="navbar-brand">
            <a href="./">
                <h1 class="title">蒋继发 (ThaddeusJiang)</h1>
                <p class="subtitle">Engineer / Blogger， 爱猫、爱读书、爱社交。</p>
            </a>
        </div>
     </nav>
    </div>
  </div>


<div class="container mt-4">
  <div class="column is-6-desktop is-offset-3-desktop is-8 is-offset-2">
      <div>
          <div class="block content blog">
            <h1 class="subtitle">2023-03-28 为什么我们需要自己的 AI 分身</h1>
            <hr>

            <p>为什么我们需要自己的 AI 分身？直接使用通用的 AI 不行吗？ChatGPT 不行吗？答：不行。</p><p>其实，我把这篇文章的大纲给 ChatGPT 并请它帮忙生成了 2 份文章，我会放在文章的最后，大家感兴趣可以对比一下。</p><p>言归正传，我想和大家分享一下我对 AI 分身的看法。首先我自己肯定想要一个 AI 分身，我希望它能代表我接待一些素未蒙面的朋友；我希望它能代表我回答一些问题和观点；我希望它能成为我的镜子帮我助更好的了解我自己。</p><p>如果我们把范围扩大到所有人，我们为什么需要自己的 AI 分身呢？</p><p>一个经常被问到问题：</p><blockquote class="tc-quote tc-big-quote"><p>直接使用通用的 AI 不行吗？ChatGPT 不行吗？</p><p>答：不行。因为通用 AI 是使用通用数据训练的，它能回答有标准答案的问题。很可惜它没有你个人的观点，它能代表一类人，例如英语老师、法律顾问、JavaScript Developer 等等，但是它不能代表你。
</p><cite>TJ</cite></blockquote><p>那么，AI 分身能为我们做什么？</p><h3 class="">1. 节省大量时间，再也不用重复回答相同的问题了。</h3><p>AI 分身节省大量时间，再也不用重复回答相同的问题了。它可以为我们接待一些素未蒙面的朋友。我们再也不用一遍又一遍的做自我介绍，不需要说明自己的技能，不需要解释自己经历。</p><h3 class="">2. 零成本复制我们的经验和观点</h3><p>AI 分身可以零成本复制我们的经验和观点，你甚至可以让它帮你做知识付费，通过分享你的经验，表达你的观点而为你赚钱。</p><h3 class="">3. 更好的了解我们自己</h3><p>AI 分身可以成为我们的镜子，帮助我们更好的了解自己。在 AI 分身实现之前，我们可以通过笔记、博客、推文、视频等方法记录自己的言行和观点，然后定期回顾以达到自省的目的，不过信息太分散了，这样做的效果并不好。在 AI 分身出现以后，我们依然可以通过上面方式记录，只不过我们多了一个优秀的人工智能，它会帮我们把上面的记录整理起来，帮助我们更好的了解我们自己。</p><p>上面几条仅仅是我脑子里浮现出的最浅显、最直接的例子，我相信 AI 分身一定有更多、更强大的能力，可以让我们的人生变得更美好、更幸福。</p><p>以上。</p><p>下面是 ChatGPT 根据我提供的大纲生成的 2 篇文章：</p><blockquote class="tc-quote tc-big-quote"><h2 class="">标题：为什么我们需要自己的 AI 分身</h2><p>介绍：
现在，人工智能已经走进了我们的日常生活，我们已经用它来帮助我们完成很多工作。但是，如果你知道你可以拥有自己的 AI 分身来代替你完成一些任务，那么你会有什么反应呢？这篇博客将介绍为什么我们需要自己的 AI 分身，以及如何创建一个 AI 分身。</p><h3 class="">节省时间，再也不用重复回答相同的问题了。</h3><p>在工作中，我们经常需要回答一些重复性的问题，这不仅浪费时间，还会让我们感到疲惫。如果你有一个 AI 分身，它可以代替你回答这些问题，从而节省时间和精力。同时，你也可以让你的 AI 分身自动回答你的邮件或短信，这样你就可以更专注于其他重要的任务。</p><h3 class="">零成本复制自己的知识和经验，你甚至可以用它来做知识付费。</h3><p>创建一个 AI 分身可以让你将自己的知识和经验复制到另一个智能体中。这意味着，你可以让你的 AI 分身自动完成你的一些工作，甚至可以将它作为一个知识付费的平台，让其他人向它提问并从中获得收益。这也可以让你赚取额外的收入，而且完全不需要额外的劳动力。</p><h3 class="">更好的了解我们自己。</h3><p>通过创建自己的 AI 分身，我们可以更好地了解我们自己。我们可以看到我们的行为和决策，从而更好地理解我们自己。这也可以帮助我们改进自己的行为和决策，从而提高我们的生产力和效率。</p><p><a class="tc-tiddlylink-external" href="https://www.aier.app" rel="noopener noreferrer" target="_blank">https://www.aier.app</a> 可以非常简单的创造一个 AI 分身 现在，创造一个 AI 分身已经变得非常简单了。有很多在线平台可以帮助你创建一个 AI 分身，其中一个就是 www.aier.app 。这个平台提供了一系列工具，让你可以轻松创建一个自己的 AI 分身。你可以为你的 AI 分身提供训练数据，让它学习你的习惯和行为。然后，你就可以让它自动完成一些任务，从而为你节省时间和精力。</p><p>结论：
通过拥有一个 AI 分身，我们可以更好地理解自己，节省时间和精力，并将我们的知识和经验复制到另一个智能体。
</p><cite>ChatGPT</cite></blockquote><blockquote class="tc-quote tc-big-quote"><h2 class="">标题：为什么我们需要自己的 AI 分身</h2><p>在现代社会中，我们经常面临着一个问题，那就是时间不够用。我们的生活节奏越来越快，每天都有大量的工作和事务需要处理，这让我们感到压力倍增。但是，如果我们有一种方法可以节省时间，那么我们将会有更多的时间去做自己想做的事情，更好的理解我们自己，更好的探索世界。</p><h3 class="">节省时间，再也不用重复回答相同的问题了。 </h3><p>在我们的工作和生活中，我们常常需要回答相同的问题。这些问题可能是关于我们的工作、我们的家庭、我们的兴趣爱好，等等。如果我们有一个 AI 分身，我们可以让它回答这些问题，这样我们就可以节省时间和精力去做其他的事情。这不仅可以让我们更高效地工作，也可以让我们更好地享受生活。</p><h3 class="">零成本复制自己的知识和经验，你甚至可以用它来做知识付费。 </h3><p>我们每个人都有自己的知识和经验。但是，这些知识和经验通常是非常宝贵的，我们可能不愿意与他人分享。但是，如果我们有一个 AI 分身，我们可以将我们的知识和经验复制到它身上，让它帮助我们回答问题、解决问题。我们甚至可以将这些知识和经验用于知识付费，让我们的 AI 分身成为我们的教育、咨询或培训的工具。</p><h3 class="">更好的了解我们自己。 </h3><p>我们的 AI 分身可以记录我们的行为、喜好、偏好和决策过程。这些信息可以帮助我们更好地了解自己，发现我们自己可能存在的弱点和盲点。通过与我们的 AI 分身进行互动，我们可以更好地了解我们自己，找到我们自己的优点和潜力。</p><p><a class="tc-tiddlylink-external" href="https://www.aier.app" rel="noopener noreferrer" target="_blank">https://www.aier.app</a> 可以非常简单的创造一个 AI 分身 现在，创造一个 AI 分身非常简单。有许多平台，如 www.aier.app，可以帮助我们创建和训练我们自己的 AI 分身。这些平台提供了简单易用的工具，可以让我们通过自然语言输入、数据导入等方式训练我们的 AI 分身。创造一个 AI 分身现在不再是科幻电影中的幻想，而是现实世界中的可能。</p><p>结论：</p><p>在我们的日常生活中，我们需要自己的 AI 分身。
</p><cite>ChatGPT</cite></blockquote>
          </div>          
      </div>
  </div>
</div>     


]]></description>
      <pubDate>Tue, 28 March 2023 14:37:53 +09:00</pubDate>
			<guid>https://thaddeusjiang.com/2023-03-28-wei-shi-me-wo-men-xu-yao-zi-ji-de-ai-fen-shen</guid>      
   </item>

</channel>
</rss>
