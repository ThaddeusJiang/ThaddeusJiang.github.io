<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   <title>蒋继发 (ThaddeusJiang)</title>
   <link>https://thaddeusjiang.com</link>
   <description>Engineer / Blogger， 爱猫、爱读书、爱社交。</description>
   <item>
      <title>2023-3-25 软件开发技能与机动车驾驶技能</title>
      <link>https://thaddeusjiang.com/2023-3-25-ruan-jian-kai-fa-ji-nen-yu-ji-dong-che-jia-shi-ji-nen</link>
			<description><![CDATA[
<div class="container">
    <div class="column is-6-desktop is-offset-3-desktop is-8 is-offset-2 my-4">
      <nav aria-label="main navigation" class="navbar" role="navigation">
        <div class="navbar-brand">
            <a href="./">
                <h1 class="title">蒋继发 (ThaddeusJiang)</h1>
                <p class="subtitle">Engineer / Blogger， 爱猫、爱读书、爱社交。</p>
            </a>
        </div>
     </nav>
    </div>
  </div>


<div class="container mt-4">
  <div class="column is-6-desktop is-offset-3-desktop is-8 is-offset-2">
      <div>
          <div class="block content blog">
            <h1 class="subtitle">2023-3-25 软件开发技能与机动车驾驶技能</h1>
            <hr>

            <p>开发工具越来越强大了，AI 可以辅助编程了，但是我们真的在工具的加持下提高了自己的编程技能了吗？生成式AI（Generative AI）大行其道的时代背景下，我们使用 AI 辅助编程的方式真的是正确的吗？我们真的变得高效了吗？我们是在朝着正确的方向发展吗？</p><p>回想刚刚进入大学开始接触编程时，我使用 C 语言和 Nodepad++ 写代码。当时根本没有类型提示和代码补全，每一个字符都需要手动键入，但是也可以很快地开发出自己想要的功能。反观现在，我们在静态类型语言和强大的 IDE 加持下常常花费一整天时间连半个功能都开发不出来。当然我们可以解释为现在我们开发的功能更复杂、更强大，但是这是真的吗？虽然新技术层出不穷，但是我们真的比初代黑客们创造了更强大、更有价值的软件吗？我个人的感受是，并没有。我们不但没有变得更强，甚至变得更弱了。</p><p>从前，几乎所有开发者都掌握产品构思、概要设计、伪代码、coding 的过程，我们熟练使用 TDD、BDD 进行软件开发，但是最近 ChatGPT 似乎改变了这种开发流程。仅代表我个人的体验，可能从不久之前开始，我的开发流程变成了：</p><ol><li>通过简单的几句话启动 ChatGPT 让它开始帮助我；</li><li>输入没有经过深思熟虑的产品需求，等待 AI 给我可以运行的代码；</li><li>阅读 AI 返回的 code，判断是否正确，通常情况下是错误的；</li><li>再给 AI 一定的提示（同样是未经过认真思考的，且是临时的闪念），再次等待；</li><li>...</li><li>经过反复多次的文字交流，AI 终于返回了可以运行的的代码；</li><li>但是，此时我已经筋疲力尽了，甚至有点焦躁，我似乎已经不在乎这个功能设计的是否合理，是否真的有价值。我只想快点结束这个功能的开发，我变得唯结果论，只求代码可以运行；</li><li>然后，我不假思索地把 code 复制到编辑器，看到代码可以运行，我长舒一口气。😮‍💨 终于结束了。</li></ol><p>这是早上冲澡时脑子的想法：这样使用 AI 辅助编程真的是正确的方式吗？我们真的变得高效了吗？在人们惊叹 AI 可以返回可以运行的代码的同时，有人统计过 human 在向 AI 提问、等待 AI 回答、确认 AI 回答，并反复修正 AI 中浪费的时间吗？人类发现团队人数过多、管理层级过多会导致交流成本升高，进而提出扁平化组织的概念。但是我们和 AI 的交流成本应该如何降低呢？</p><p>软件开发的过程应该是有的放矢，而不是不断试错。软件开发技能应该像机动车驾驶技能一样形成肌肉记忆，这样我们才可以一旦灵感出现就随时开始，不需要临时翻阅开发文档。如果你家门口有一辆机动车，你会理解我说的随时出发，那种感觉才是真正的自由。</p><p>另外还有一点，机动车驾驶技能是一项随着时间积累不断提高的技能，你不太可能只听了一段语音或者看了驾驶教程就掌握驾驶技术；如果你不断开车出去，你的驾驶技术会越来越好。难道大家不想让自己的软件开发技能也可以这样吗？只要不断从事开发工作，软件开发技术就能越来越好。</p><p>如果我们只是通过聊天窗口（chat）让 AI 做开发，我们的开发技术会越来越好，还是越来越差？</p>
          </div>          
      </div>
  </div>
</div>     


]]></description>
      <pubDate>Sat, 25 March 2023 9:57:44 +09:00</pubDate>
			<guid>https://thaddeusjiang.com/2023-3-25-ruan-jian-kai-fa-ji-nen-yu-ji-dong-che-jia-shi-ji-nen</guid>      
   </item>

   <item>
      <title>2023-03-13 能够自主编程的 AI 出现以后，还需要程序员吗？</title>
      <link>https://thaddeusjiang.com/2023-03-13-nen-gou-zi-zhu-bian-cheng-de-ai-chu-xian-yi-hou-huai-xu-yao-cheng-xu-yuan-ma</link>
			<description><![CDATA[
<div class="container">
    <div class="column is-6-desktop is-offset-3-desktop is-8 is-offset-2 my-4">
      <nav aria-label="main navigation" class="navbar" role="navigation">
        <div class="navbar-brand">
            <a href="./">
                <h1 class="title">蒋继发 (ThaddeusJiang)</h1>
                <p class="subtitle">Engineer / Blogger， 爱猫、爱读书、爱社交。</p>
            </a>
        </div>
     </nav>
    </div>
  </div>


<div class="container mt-4">
  <div class="column is-6-desktop is-offset-3-desktop is-8 is-offset-2">
      <div>
          <div class="block content blog">
            <h1 class="subtitle">2023-03-13 能够自主编程的 AI 出现以后，还需要程序员吗？</h1>
            <hr>

            <p>同类问题，照相机出现以后，还需要画家吗？答案：不言而喻。</p><h2 class="">未来需要程序员吗</h2><p>世界上第一台真正的照相机是1839年8月19日法国画家路易·达盖尔发明的，已经出现了接近 200 年了，比清朝灭亡的时间还要长，但是现在依然有无数的人学习绘画，以绘画为生，甚至教导其他人绘画。所以我认为能够自主编程的 AI 出现以后，学习编程依然是有价值的，还会有无数的人学习编程，以编程为生，甚至教导其他人编程。</p><p>如果你不信，去 Twitter，Instagram，Youtube 上搜索一下“绘画”就明白了。</p><h2 class="">未来的编程流派</h2><p>我喜欢编程，编程有一种创造某种事物的成就感；我讨厌编写 CRUD 码，编写 CRUD 绝对是计算机时代的流水线工作，枯燥且乏味；我希望 AI 可以帮我完成所有的 CRUD 代码。没错我不仅仅不担心 AI 会代替我的工作，我恰恰希望这样的 AI 快点到来。</p><p>能够自主编程的 AI 出现以后，编程不再是高效又准确地根据设计稿和原型实现现实世界的需求。程序员的创造力将会得到进一步释放，程序员可能会发现更多有趣的方向，有更多时间编写表达内心的代码，进而出现更多的编程流派。</p><p>下面是 ChatGPT 告诉我的关于相机问世以后，绘画派别的发展。</p><blockquote class="tc-quote tc-big-quote"><p>相机的问世对许多绘画派别都产生了影响，但以下是一些在相机问世后得到进一步发展的绘画派别：</p><ol><li>印象派：印象派艺术家受到相机影像的启发，试图捕捉光线和色彩的瞬间效果，这与相机的快门速度和光学透镜有很大关系。印象派的绘画技巧包括使用小笔触和鲜艳的颜色来表现光线和色彩的变化。</li><li>立体主义：立体主义艺术家试图将现实世界的三维形态转化为二维平面上的几何形状和线条。这种绘画风格受到相机照片的影响，因为相机可以将三维物体转化为二维图像，立体主义艺术家试图通过绘画来模仿这种效果。</li><li>超现实主义：超现实主义艺术家试图超越现实世界的限制，创造一种完全超越人类经验的想象空间。相机的问世为超现实主义艺术家提供了一种新的方式来捕捉和处理图像，他们使用相机照片和其他图像来创造出奇幻的场景和形象。</li></ol><p>总之，相机的问世对许多绘画派别产生了影响，促使艺术家们探索新的创作方式和风格。
</p><cite>ChatGPT</cite></blockquote><p>我类比一下，未来的编程流派：</p><ol><li>印象派：印象派程序员试图捕捉电子和数据的变化和流动，注重计算过程而不是结果。</li><li>立体主义：立体主义程序员试图编写多维代码，突破空间和时间的束缚，代码不再是自上而下编写，不再需要提前引入，甚至运行也可以更多中可能性。就像《降临》中外星人使用的图形语言。</li><li>超现实主义：超现实主义程序员试图超越现实世界的限制，创造一种完全超越人类经验的软件程序。未来是否会有一款软件程序，我们可以通过它窥探如《星际穿越》中多维宇宙。</li></ol><p>未来的编程一定比现在更加有趣，有更多可能性，更能彰显人类的独特和创造力。</p><p>下面是 ChatGPT 的类似比：</p><blockquote class="tc-quote tc-big-quote"><p>如果AI能够自主编程，这将对编程工作产生深远的影响。类比于绘画领域中相机的出现，自主编程的AI将能够自动化许多编程任务并提高编程效率。以下是可能发生的一些变化：</p><ol><li>更快速的开发周期：AI将能够自动化许多编程任务，例如编写代码和测试，从而缩短开发周期。这将使得开发人员能够更快地交付产品和服务，从而提高生产效率。</li><li>更高质量的代码：AI可以通过学习和自我改进来编写更高质量的代码。这将减少错误和漏洞，并提高软件的稳定性和可靠性。</li><li>更高效的协作：AI将能够自动化许多繁琐的编程任务，从而使开发人员能够更专注于设计和创新，而不是花费时间在重复性的任务上。这将促进更高效的协作和更快速的开发进程。</li></ol><p>更高级的技术：自主编程的AI将能够学习和应用更高级的编程技术和算法，从而推动编程领域的进一步发展和创新。</p><p>总之，如果AI能够自主编程，这将使得编程工作变得更高效、更准确、更创新，并且可能会引领编程领域的新一轮革命。
</p><cite>ChatGPT</cite></blockquote><p>😂 AI 还有很长的路要走啊，难道人类会局限在“提高效率”这么窄的领域吗？或许 AI 暂时无法理解人类所说过“幸福”所谓何物。</p><h2 class="">未来的编程语言</h2><p>如果编程工作不再是高效却准确的实现世界的需求，我们会使用什么编程语言开发软件呢？</p><p>参考《黑客与画家》中 100 年后的编程语言，我们不再需要考虑编程语言是否满足高性能或者容易控制内存；不再需要考虑编程语言是否流行或者是否拥有优秀的生态；我们需要考虑的是编程语言是否容易表达我们的思考。</p><p>我不认为英语、中文亦或是任何一种自然语言可以替代编程语言，自然语言常常过度冗余且容易产生歧义；当然数学、物理、化学一样的公式也不适合做编程语言，它们有过度简洁、抽象，且难以学习和掌握。未来的语言依然可能和现在的编程语言一样，在冗余和过度抽象之间达到平衡，并且容易表达程序员的思考。</p><p>简单的需求，自然语言太繁琐。</p><pre><code>// Good
get(TJ, firstName) // Thaddeus

// Bad
Tell me TJ's first name, plz. // TJ's first name is "Thaddeus"</code></pre><p>复杂的需求，现有的编程语言太繁琐。</p><pre><code>// Good
我想要一个图像识别功能，当我的相机拍摄一个小动物，我希望知道小动物的品种，以及其他信息。

// Bad
import "xxxLib"
import "yyyLib"
import "zzzLib"

func main() {
  use xxxLib do something;
  use yyyLib do something;
  use zzzLib do something;

  return some useful information;
}</code></pre><p>我们需要自由切换自然语言和编程语言。</p><pre><code>// Better

我想要一个图像识别功能叫 whatAnimal，当我的相机拍摄一个小动物，我希望知道小动物的品种，以及其他信息。

meronkun = whatAnimal("meronkun.png") // data of meronkun</code></pre><p>refs:</p><ul><li><a class="tc-tiddlylink-external" href="https://en.wikipedia.org/wiki/Hackers_%26_Painters" rel="noopener noreferrer" target="_blank">《黑客与画家》</a></li><li><a class="tc-tiddlylink-external" href="https://zh.wikipedia.org/zh-cn/%E9%99%8D%E4%B8%B4_(%E7%94%B5%E5%BD%B1)" rel="noopener noreferrer" target="_blank">《降临》</a></li><li><a class="tc-tiddlylink-external" href="https://zh.wikipedia.org/zh-cn/%E6%98%9F%E9%99%85%E7%A9%BF%E8%B6%8A" rel="noopener noreferrer" target="_blank">《星际穿越》</a></li></ul>
          </div>          
      </div>
  </div>
</div>     


]]></description>
      <pubDate>Mon, 13 March 2023 12:32:37 +09:00</pubDate>
			<guid>https://thaddeusjiang.com/2023-03-13-nen-gou-zi-zhu-bian-cheng-de-ai-chu-xian-yi-hou-huai-xu-yao-cheng-xu-yuan-ma</guid>      
   </item>

   <item>
      <title>2023-02-16 读《从字体开始 设计改变的生活与社会》</title>
      <link>https://thaddeusjiang.com/2023-02-16-du-cong-zi-ti-kai-shi-she-ji-gai-bian-de-sheng-huo-yu-she-hui</link>
			<description><![CDATA[
<div class="container">
    <div class="column is-6-desktop is-offset-3-desktop is-8 is-offset-2 my-4">
      <nav aria-label="main navigation" class="navbar" role="navigation">
        <div class="navbar-brand">
            <a href="./">
                <h1 class="title">蒋继发 (ThaddeusJiang)</h1>
                <p class="subtitle">Engineer / Blogger， 爱猫、爱读书、爱社交。</p>
            </a>
        </div>
     </nav>
    </div>
  </div>


<div class="container mt-4">
  <div class="column is-6-desktop is-offset-3-desktop is-8 is-offset-2">
      <div>
          <div class="block content blog">
            <h1 class="subtitle">2023-02-16 读《从字体开始 设计改变的生活与社会》</h1>
            <hr>

            <p>2023年刚刚过去一个月，我感觉今年的年度最佳阅读已经确定了。好几年没有读到这么棒的书了，这本书一定是我以后反复翻阅的读物。</p><p>把一点感悟放在最前面吧，希望能与你产生共鸣。曾经字体设计是一门艺术，品牌在追求利益的同时也不忘追求美学、格调、内涵等等，品牌愿意投入时间和精力去设计品牌专用字体，正如资生堂的《花椿》。但是如今的 21 世纪，数字媒体大行其道的时代，几乎所有的数字媒体都采用大同小异的无衬线体，可谓千篇一律，毫无惊喜可言。过去的出版物真的很美，仅仅从字体设计上就让读者感到被重视，被尊重。而自喻为进步、现代的今天，读者就像是被饲养场投喂的肉鸡，无时无刻不在狼吞虎咽的浏览内容，却越来越少可以慢下来细细的品味和欣赏。</p><p>感受一下日本资生堂《花椿》在字体方面的追求，一起洗涤一下我们的眼睛。</p><p>OK，言归正传。这本书真的太棒了，每一章都内容充实，精彩纷呈，字里行间偶尔出现的插图更是起到了画龙点睛的效果。因为读的比较认真，有很多感受想和大家分享。</p><p>第一章讲字体在品牌和商业上的运用，介绍了很多我们耳熟能详的品牌，例如 LV、Gucci、资生堂、星巴克等等，这些品牌都有其专用的品牌字体，也是这些精心设计的字体让这些品牌区别于竞争对手。尤其是书中介绍星巴克咖啡在中国内蒙的店铺的字体设计的故事非常有趣，让我意犹未尽。还有 star wars 电影采用的字体让我有「なるほど」(终于明白了)的惊喜。</p><p>我突然想到最近创投圈很火的蜜雪冰城的招牌，哈哈哈，没有对比就没有伤害啊，😂</p><p>第二章讲字体在城市建设、高速公路、社区文化中的运用，各种标识，指示牌，真的是既熟悉又陌生，熟悉是因为我们每天都离不开它们，陌生是既是我们如此高频地接触这些字体，却对它们所知甚少，甚至达到了一种忽视的地步。这本书让我重新对我们日常生活中常见的设计、规划、文字产生了敬畏之心。</p><p>第三章讲出版物的字体发展，尤其是 Times New Roman 的故事，真的太有意思了。一个外行人领导兼职团队设计的字体，虽然缺点很多，但是阴差阳错的被行业广泛使用并影响至今。让我联想到了软件行业，似曾相识的场景仿佛正在重演。</p><p>说实话，后面几章我看的没有前几章认真，倒不是后面几章不精彩，相反是因为每一章都太精彩，内容丰富，读的时候需要不断地动脑子，读了几章以后大脑有点吸收不了了，哈哈哈</p><p>最后给大家 pickup 我喜欢的章节</p><ol><li>香港霓虹灯广告牌上的字体设计背后的时代背景</li><li>英国、德国、瑞典高速公路上的字体设计表现出的严谨和科学</li><li>日本资生堂推出的时尚杂志《花椿》反映了企业的追求</li><li>机械印刷时代的字体设计的局限和科技进步对字体设计的影响</li></ol><p>最后，强烈推荐 The Type 出品的这本书《从字体开始 设计改变的生活与社会》。</p><p>refs:</p><ul><li><a class="tc-tiddlylink-external" href="https://www.thetype.com/" rel="noopener noreferrer" target="_blank">https://www.thetype.com/</a></li><li><a class="tc-tiddlylink-external" href="https://en.wikipedia.org/wiki/Times_New_Roman" rel="noopener noreferrer" target="_blank">https://en.wikipedia.org/wiki/Times_New_Roman</a></li><li><a class="tc-tiddlylink-external" href="https://hanatsubaki.shiseido.com/jp/" rel="noopener noreferrer" target="_blank">https://hanatsubaki.shiseido.com/jp/</a></li></ul>
          </div>          
      </div>
  </div>
</div>     


]]></description>
      <pubDate>Thu, 16 February 2023 21:49:35 +09:00</pubDate>
			<guid>https://thaddeusjiang.com/2023-02-16-du-cong-zi-ti-kai-shi-she-ji-gai-bian-de-sheng-huo-yu-she-hui</guid>      
   </item>

</channel>
</rss>
